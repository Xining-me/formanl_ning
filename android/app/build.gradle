// android/app/build.gradle — 替换此文件内容
import java.util.Properties

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader) }
}

def flutterRoot = localProperties.getProperty('flutter.sdk') ?: System.getenv('FLUTTER_ROOT')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Set flutter.sdk in local.properties or set FLUTTER_ROOT env.")
}

def kotlin_version = '1.8.10' // 若在根 build.gradle 中已有定义，可与其保持一致

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.example.campustweet" // 请改为你的 package
        // 明确使用数字，不引用未定义的 flutter.xxx
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug { }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    implementation 'androidx.multidex:multidex:2.0.1'
}

// 保留 flutter.gradle，以便 Flutter 打包任务正常工作
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
